{"version":3,"file":"embed.jsx","sourceRoot":"","sources":["embed.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAQtD,MAAM,CAAC,iBAAiB,GAAG,CAAC,IAAI,EAAE,EAAE;IAClC,MAAM,EAAE,WAAW,KAAc,IAAI,EAAb,IAAI,UAAK,IAAI,EAA/B,eAAwB,CAAO,CAAC;IACtC,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACvD,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,WAAW,cAAc,CAAC,CAAC;QAC/D,OAAO;IACT,CAAC;IACD,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,EAAG,EAAE,SAAS,CAAC,CAAC;AACvD,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ChatWidget } from './components/chat-widget';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    initAlvinHelpdesk: (opts: { containerId: string; [key: string]: any }) => void;\r\n  }\r\n}\r\n\r\nwindow.initAlvinHelpdesk = (opts) => {\r\n  const { containerId, ...rest } = opts;\r\n  const container = document.getElementById(containerId);\r\n  if (!container) {\r\n    console.error(`Container with id \"${containerId}\" not found.`);\r\n    return;\r\n  }\r\n  ReactDOM.render(<ChatWidget {...rest} />, container);\r\n};\r\n"]}
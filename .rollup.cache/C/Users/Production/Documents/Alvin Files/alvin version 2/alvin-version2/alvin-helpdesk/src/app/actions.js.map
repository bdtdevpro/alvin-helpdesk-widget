{"version":3,"file":"actions.js","sourceRoot":"","sources":["actions.ts"],"names":[],"mappings":"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","sourcesContent":["\r\n\"use server\";\r\n\r\nimport { answerHrQuestion } from \"@/ai/flows/answer-hr-questions\";\r\nimport { generateSampleQuestions } from \"@/ai/flows/generate-sample-questions\";\r\nimport { smartEscalation } from \"@/ai/flows/smart-escalation\";\r\nimport type { Message } from \"@/lib/types\";\r\n\r\nexport async function getAIResponse(question: string, topic: string | null) {\r\n  try {\r\n    const result = await answerHrQuestion({ question, topic });\r\n    return result.answer;\r\n  } catch (error) {\r\n    console.error(\"Error getting AI response:\", error);\r\n    return \"Sorry, I encountered an error. Please try again.\";\r\n  }\r\n}\r\n\r\nexport async function escalateToDepartment(chatHistory: Message[]) {\r\n  try {\r\n    const conversationHistory = chatHistory\r\n      .map((msg) => `${msg.role}: ${msg.content}`)\r\n      .join(\"\\n\");\r\n\r\n    // Use the whole conversation as the user query for better context\r\n    const userQuery = conversationHistory;\r\n\r\n    if (!userQuery) {\r\n      return \"Could not find a conversation to escalate.\";\r\n    }\r\n\r\n    const result = await smartEscalation({\r\n      userQuery: userQuery,\r\n      conversationHistory,\r\n    });\r\n\r\n    return `Your request has been escalated to the @@${result.department}@@ department. Reason: ${result.reason}`;\r\n  } catch (error) {\r\n    console.error(\"Error escalating chat:\", error);\r\n    return \"Sorry, I was unable to escalate your request. Please contact support directly.\";\r\n  }\r\n}\r\n\r\nexport async function getTopicSuggestions(categoryName: string) {\r\n  try {\r\n    console.log('getTopicSuggestions called with categoryName:', categoryName);\r\n    \r\n    // Validate input\r\n    if (!categoryName || typeof categoryName !== 'string' || categoryName.trim() === '') {\r\n      console.error('Invalid categoryName:', categoryName);\r\n      return [];\r\n    }\r\n    \r\n    // Check environment variables\r\n    if (!process.env.GEMINI_API_KEY) {\r\n      console.error('GEMINI_API_KEY not found in environment variables');\r\n      return getFallbackSuggestions(categoryName);\r\n    }\r\n    \r\n    // Add timeout for AI flow\r\n    const timeoutPromise = new Promise((_, reject) => {\r\n      setTimeout(() => reject(new Error('AI flow timeout')), 25000); // 25 second timeout\r\n    });\r\n    \r\n    // Pass the category name as the topic for generating sample questions\r\n    const aiPromise = generateSampleQuestions({ topic: categoryName });\r\n    \r\n    const result = await Promise.race([aiPromise, timeoutPromise]) as any;\r\n    console.log('generateSampleQuestions result:', result);\r\n    \r\n    // Validate result\r\n    if (!result || !result.questions || !Array.isArray(result.questions)) {\r\n      console.error('Invalid result from generateSampleQuestions:', result);\r\n      return getFallbackSuggestions(categoryName);\r\n    }\r\n    \r\n    return result.questions;\r\n  } catch (error) {\r\n    console.error(\"Error getting topic suggestions:\", error);\r\n    return getFallbackSuggestions(categoryName);\r\n  }\r\n}\r\n\r\nfunction getFallbackSuggestions(categoryName: string): string[] {\r\n  return [\r\n    `What are the key points of ${categoryName}?`,\r\n    `How does ${categoryName} apply to employees?`,\r\n    `What are the requirements for ${categoryName}?`\r\n  ];\r\n}\r\n"]}